// Generated by https://quicktype.io

export interface Comment {
	url: string;
	html_url: string;
	issue_url: string;
	id: number;
	node_id: string;
	user: Sender;
	created_at: string;
	updated_at: string;
	author_association: string;
	body: string;
	performed_via_github_app: null;
}

export interface Sender {
	login: string;
	id: number;
	node_id: string;
	avatar_url: string;
	gravatar_id: string;
	url: string;
	html_url: string;
	followers_url: string;
	following_url: string;
	gists_url: string;
	starred_url: string;
	subscriptions_url: string;
	organizations_url: string;
	repos_url: string;
	events_url: string;
	received_events_url: string;
	type: Type;
	site_admin: boolean;
	name?: string;
	email?: null | string;
}

export enum Type {
	Organization = 'Organization',
	User = 'User',
}

export interface Commit {
	id: string;
	tree_id: string;
	distinct: boolean;
	message: string;
	timestamp: string;
	url: string;
	author: Author;
	committer: Author;
	added: string[];
	removed: any[];
	modified: string[];
}

export interface Author {
	name: string;
	email: string;
	username: string;
}

export interface Hook {
	type: string;
	id: number;
	name: string;
	active: boolean;
	events: string[];
	config: Config;
	updated_at: string;
	created_at: string;
	url: string;
	test_url: string;
	ping_url: string;
	deliveries_url: string;
	last_response: LastResponse;
}

export interface Config {
	content_type: string;
	insecure_ssl: string;
	url: string;
}

export interface LastResponse {
	code: null;
	status: string;
	message: null;
}

export interface Issue {
	url: string;
	repository_url: string;
	labels_url: string;
	comments_url: string;
	events_url: string;
	html_url: string;
	id: number;
	node_id: string;
	number: number;
	title: string;
	user: Sender;
	labels: any[];
	state: string;
	locked: boolean;
	assignee: null;
	assignees: any[];
	milestone: null;
	comments: number;
	created_at: string;
	updated_at: string;
	closed_at: null;
	author_association: string;
	active_lock_reason: null;
	body: string;
	performed_via_github_app: null;
}

export interface Organization {
	login: string;
	id: number;
	node_id: string;
	url: string;
	repos_url: string;
	events_url: string;
	hooks_url: string;
	issues_url: string;
	members_url: string;
	public_members_url: string;
	avatar_url: string;
	description: string;
}

export interface Pusher {
	name: string;
	email: string;
}

export interface Repository {
	id: number;
	node_id: string;
	name: string;
	full_name: string;
	private: boolean;
	owner: Sender;
	html_url: string;
	description: null | string;
	fork: boolean;
	url: string;
	forks_url: string;
	keys_url: string;
	collaborators_url: string;
	teams_url: string;
	hooks_url: string;
	issue_events_url: string;
	events_url: string;
	assignees_url: string;
	branches_url: string;
	tags_url: string;
	blobs_url: string;
	git_tags_url: string;
	git_refs_url: string;
	trees_url: string;
	statuses_url: string;
	languages_url: string;
	stargazers_url: string;
	contributors_url: string;
	subscribers_url: string;
	subscription_url: string;
	commits_url: string;
	git_commits_url: string;
	comments_url: string;
	issue_comment_url: string;
	contents_url: string;
	compare_url: string;
	merges_url: string;
	archive_url: string;
	downloads_url: string;
	issues_url: string;
	pulls_url: string;
	milestones_url: string;
	notifications_url: string;
	labels_url: string;
	releases_url: string;
	deployments_url: string;
	created_at: number | string;
	updated_at: string;
	pushed_at: number | string;
	git_url: string;
	ssh_url: string;
	clone_url: string;
	svn_url: string;
	homepage: null | string;
	size: number;
	stargazers_count: number;
	watchers_count: number;
	language: string;
	has_issues: boolean;
	has_projects: boolean;
	has_downloads: boolean;
	has_wiki: boolean;
	has_pages: boolean;
	forks_count: number;
	mirror_url: null;
	archived: boolean;
	disabled: boolean;
	open_issues_count: number;
	license: License | null;
	forks: number;
	open_issues: number;
	watchers: number;
	default_branch: string;
	stargazers?: number;
	master_branch?: string;
	organization?: string;
}

export interface License {
	key: string;
	name: string;
	spdx_id: string;
	url: null | string;
	node_id: string;
}

export interface GithubHooks {
	forkee?: Forkee;
	repository: Repository;
	organization?: Organization;
	sender: Sender;
	ref?: string;
	before?: string;
	after?: string;
	pusher?: Pusher;
	created?: boolean;
	deleted?: boolean;
	forced?: boolean;
	base_ref?: null | string;
	compare?: string;
	commits?: Commit[];
	head_commit?: Commit;
	action?: string;
	starred_at?: null | string;
	zen?: string;
	hook_id?: number;
	hook?: Hook;
	issue?: Issue;
	comment?: Comment;
	ref_type?: string;
	master_branch?: string;
	description?: string;
	pusher_type?: string;
}

export interface Comment {
	url: string;
	html_url: string;
	issue_url: string;
	id: number;
	node_id: string;
	user: Sender;
	created_at: string;
	updated_at: string;
	author_association: string;
	body: string;
	performed_via_github_app: null;
}

export interface Sender {
	login: string;
	id: number;
	node_id: string;
	avatar_url: string;
	gravatar_id: string;
	url: string;
	html_url: string;
	followers_url: string;
	following_url: string;
	gists_url: string;
	starred_url: string;
	subscriptions_url: string;
	organizations_url: string;
	repos_url: string;
	events_url: string;
	received_events_url: string;
	type: Type;
	site_admin: boolean;
	name?: string;
	email?: null | string;
}

export interface Commit {
	id: string;
	tree_id: string;
	distinct: boolean;
	message: string;
	timestamp: string;
	url: string;
	author: Author;
	committer: Author;
	added: string[];
	removed: any[];
	modified: string[];
}

export interface Author {
	name: string;
	email: string;
	username: string;
}

export interface Forkee {
	id: number;
	node_id: string;
	name: string;
	full_name: string;
	private: boolean;
	owner: Sender;
	html_url: string;
	description: string;
	fork: boolean;
	url: string;
	forks_url: string;
	keys_url: string;
	collaborators_url: string;
	teams_url: string;
	hooks_url: string;
	issue_events_url: string;
	events_url: string;
	assignees_url: string;
	branches_url: string;
	tags_url: string;
	blobs_url: string;
	git_tags_url: string;
	git_refs_url: string;
	trees_url: string;
	statuses_url: string;
	languages_url: string;
	stargazers_url: string;
	contributors_url: string;
	subscribers_url: string;
	subscription_url: string;
	commits_url: string;
	git_commits_url: string;
	comments_url: string;
	issue_comment_url: string;
	contents_url: string;
	compare_url: string;
	merges_url: string;
	archive_url: string;
	downloads_url: string;
	issues_url: string;
	pulls_url: string;
	milestones_url: string;
	notifications_url: string;
	labels_url: string;
	releases_url: string;
	deployments_url: string;
	created_at: string;
	updated_at: string;
	pushed_at: string;
	git_url: string;
	ssh_url: string;
	clone_url: string;
	svn_url: string;
	homepage: string;
	size: number;
	stargazers_count: number;
	watchers_count: number;
	language: null;
	has_issues: boolean;
	has_projects: boolean;
	has_downloads: boolean;
	has_wiki: boolean;
	has_pages: boolean;
	forks_count: number;
	mirror_url: null;
	archived: boolean;
	disabled: boolean;
	open_issues_count: number;
	license: License;
	forks: number;
	open_issues: number;
	watchers: number;
	default_branch: Branch;
	public: boolean;
}

export enum Branch {
	Main = 'main',
}

export interface License {
	key: string;
	name: string;
	spdx_id: string;
	url: null | string;
	node_id: string;
}

export interface Hook {
	type: string;
	id: number;
	name: string;
	active: boolean;
	events: string[];
	config: Config;
	updated_at: string;
	created_at: string;
	url: string;
	test_url: string;
	ping_url: string;
	deliveries_url: string;
	last_response: LastResponse;
}

export interface Config {
	content_type: string;
	insecure_ssl: string;
	url: string;
}

export interface LastResponse {
	code: null;
	status: string;
	message: null;
}

export interface Issue {
	url: string;
	repository_url: string;
	labels_url: string;
	comments_url: string;
	events_url: string;
	html_url: string;
	id: number;
	node_id: string;
	number: number;
	title: string;
	user: Sender;
	labels: any[];
	state: string;
	locked: boolean;
	assignee: null;
	assignees: any[];
	milestone: null;
	comments: number;
	created_at: string;
	updated_at: string;
	closed_at: null;
	author_association: string;
	active_lock_reason: null;
	body: string;
	performed_via_github_app: null;
}

export interface Organization {
	login: string;
	id: number;
	node_id: string;
	url: string;
	repos_url: string;
	events_url: string;
	hooks_url: string;
	issues_url: string;
	members_url: string;
	public_members_url: string;
	avatar_url: string;
	description: string;
}

export interface Pusher {
	name: string;
	email: string;
}

export interface Repository {
	id: number;
	node_id: string;
	name: string;
	full_name: string;
	private: boolean;
	owner: Sender;
	html_url: string;
	description: string | null;
	fork: boolean;
	url: string;
	forks_url: string;
	keys_url: string;
	collaborators_url: string;
	teams_url: string;
	hooks_url: string;
	issue_events_url: string;
	events_url: string;
	assignees_url: string;
	branches_url: string;
	tags_url: string;
	blobs_url: string;
	git_tags_url: string;
	git_refs_url: string;
	trees_url: string;
	statuses_url: string;
	languages_url: string;
	stargazers_url: string;
	contributors_url: string;
	subscribers_url: string;
	subscription_url: string;
	commits_url: string;
	git_commits_url: string;
	comments_url: string;
	issue_comment_url: string;
	contents_url: string;
	compare_url: string;
	merges_url: string;
	archive_url: string;
	downloads_url: string;
	issues_url: string;
	pulls_url: string;
	milestones_url: string;
	notifications_url: string;
	labels_url: string;
	releases_url: string;
	deployments_url: string;
	created_at: number | string;
	updated_at: string;
	pushed_at: number | string;
	git_url: string;
	ssh_url: string;
	clone_url: string;
	svn_url: string;
	homepage: null | string;
	size: number;
	stargazers_count: number;
	watchers_count: number;
	language: string;
	has_issues: boolean;
	has_projects: boolean;
	has_downloads: boolean;
	has_wiki: boolean;
	has_pages: boolean;
	forks_count: number;
	mirror_url: null;
	archived: boolean;
	disabled: boolean;
	open_issues_count: number;
	license: License | null;
	forks: number;
	open_issues: number;
	watchers: number;
	default_branch: string;
	stargazers?: number;
	master_branch?: string;
	organization?: string;
}
